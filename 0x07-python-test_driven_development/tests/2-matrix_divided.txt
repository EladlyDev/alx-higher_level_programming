A doctest for ```matrix_divided``` function from the file ```2-matrix_divided```
===================

Importing the requirments:
----------
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Basic Check:
----------
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> res = matrix_divided(matrix, 3)
	>>> matrix == res
	False
	>>> res
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> matrix
	[[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided([[1]], 3)
	[[0.33]]

In case of inapproriate matrix:
--------------
   >>> matrix_divided("not a matrix", 3)
   Traceback (most recent call last):
   ...
   TypeError: matrix must be a matrix (list of lists) of integers/floats
   >>> matrix_divided(["hi", [3, 4, 5]], 3)
   Traceback (most recent call last):
   ...
   TypeError: matrix must be a matrix (list of lists) of integers/floats
   >>> matrix_divided([["1", 2], [3, 4, 5]], 3)
   Traceback (most recent call last):
   ...
   TypeError: matrix must be a matrix (list of lists) of integers/floats
   >>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
   >>> matrix_divided(matrix, 3)
   Traceback (most recent call last):
   ...
   TypeError: Each row of the matrix must have the same size
   >>> matrix_divided([], 3)
   >>> matrix_divided(None, 3)
   >>> matrix_divided([[], []], 3)
   [[], []]

In case of inappropriate div:
---------------
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, "3")
	Traceback (most recent call last):
	...
	TypeError: div must be a number
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero
