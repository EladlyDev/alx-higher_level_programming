This is doctest for the ``add_integer`` function
==================================================

Importing the function from the file:
----------------
	>>> add_integer = __import__("0-add_integer").add_integer
	>>> import sys
	>>> import math

Checking it with simple operations
----------------
	>>> add_integer(1)
	99
	>>> add_integer(5, 10)
	15
	>>> add_integer(55, 100)
	155
	>>> add_integer(0, 0)
	0
	>>> add_integer(1, -1)
	0

Checking with non-integer values
------------------
	>>> add_integer("5", "10")
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
	>>> add_integer(5, "10")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer
	>>> add_integer(123, "hi brr")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Checking float values
-----------------
	>>> add_integer(5.5, 10)
	15
	>>> add_integer(-5.5, -10.9)
	-15
	>>> add_integer(1e20, 1.9)
	100000000000000000001
	>>> add_integer(1e20, 1e20)
	200000000000000000000
	>>> type(add_integer(5.5, 10)) is int
	True
	>>> add_integer(sys.float_info.max * 1000, sys.float_info.max * 100)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer
	>>> add_integer(math.nan, 5)
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer
